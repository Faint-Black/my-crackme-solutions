Binary name: ./getting_started.out
 
+============+
|  ELF DATA  |
+============+===========================================================
ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              DYN (Position-Independent Executable file)
  Machine:                           Advanced Micro Devices X86-64
  Version:                           0x1
  Entry point address:               0x10a0
  Start of program headers:          64 (bytes into file)
  Start of section headers:          14072 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         13
  Size of section headers:           64 (bytes)
  Number of section headers:         31
  Section header string table index: 30

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .interp           PROGBITS         0000000000000318  00000318
       000000000000001c  0000000000000000   A       0     0     1
  [ 2] .note.gnu.pr[...] NOTE             0000000000000338  00000338
       0000000000000030  0000000000000000   A       0     0     8
  [ 3] .note.gnu.bu[...] NOTE             0000000000000368  00000368
       0000000000000024  0000000000000000   A       0     0     4
  [ 4] .note.ABI-tag     NOTE             000000000000038c  0000038c
       0000000000000020  0000000000000000   A       0     0     4
  [ 5] .gnu.hash         GNU_HASH         00000000000003b0  000003b0
       0000000000000024  0000000000000000   A       6     0     8
  [ 6] .dynsym           DYNSYM           00000000000003d8  000003d8
       00000000000000d8  0000000000000018   A       7     1     8
  [ 7] .dynstr           STRTAB           00000000000004b0  000004b0
       000000000000009b  0000000000000000   A       0     0     1
  [ 8] .gnu.version      VERSYM           000000000000054c  0000054c
       0000000000000012  0000000000000002   A       6     0     2
  [ 9] .gnu.version_r    VERNEED          0000000000000560  00000560
       0000000000000030  0000000000000000   A       7     1     8
  [10] .rela.dyn         RELA             0000000000000590  00000590
       00000000000000c0  0000000000000018   A       6     0     8
  [11] .rela.plt         RELA             0000000000000650  00000650
       0000000000000048  0000000000000018  AI       6    24     8
  [12] .init             PROGBITS         0000000000001000  00001000
       000000000000001b  0000000000000000  AX       0     0     4
  [13] .plt              PROGBITS         0000000000001020  00001020
       0000000000000040  0000000000000010  AX       0     0     16
  [14] .plt.got          PROGBITS         0000000000001060  00001060
       0000000000000010  0000000000000010  AX       0     0     16
  [15] .plt.sec          PROGBITS         0000000000001070  00001070
       0000000000000030  0000000000000010  AX       0     0     16
  [16] .text             PROGBITS         00000000000010a0  000010a0
       0000000000000278  0000000000000000  AX       0     0     16
  [17] .fini             PROGBITS         0000000000001318  00001318
       000000000000000d  0000000000000000  AX       0     0     4
  [18] .rodata           PROGBITS         0000000000002000  00002000
       0000000000000015  0000000000000000   A       0     0     4
  [19] .eh_frame_hdr     PROGBITS         0000000000002018  00002018
       0000000000000034  0000000000000000   A       0     0     4
  [20] .eh_frame         PROGBITS         0000000000002050  00002050
       00000000000000ac  0000000000000000   A       0     0     8
  [21] .init_array       INIT_ARRAY       0000000000003da8  00002da8
       0000000000000008  0000000000000008  WA       0     0     8
  [22] .fini_array       FINI_ARRAY       0000000000003db0  00002db0
       0000000000000008  0000000000000008  WA       0     0     8
  [23] .dynamic          DYNAMIC          0000000000003db8  00002db8
       00000000000001f0  0000000000000010  WA       7     0     8
  [24] .got              PROGBITS         0000000000003fa8  00002fa8
       0000000000000058  0000000000000008  WA       0     0     8
  [25] .data             PROGBITS         0000000000004000  00003000
       0000000000000010  0000000000000000  WA       0     0     8
  [26] .bss              NOBITS           0000000000004010  00003010
       0000000000000008  0000000000000000  WA       0     0     1
  [27] .comment          PROGBITS         0000000000000000  00003010
       000000000000002b  0000000000000001  MS       0     0     1
  [28] .symtab           SYMTAB           0000000000000000  00003040
       0000000000000390  0000000000000018          29    18     8
  [29] .strtab           STRTAB           0000000000000000  000033d0
       000000000000020b  0000000000000000           0     0     1
  [30] .shstrtab         STRTAB           0000000000000000  000035db
       000000000000011a  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  D (mbind), l (large), p (processor specific)

There are no section groups in this file.

Program Headers:
  Type           Offset             VirtAddr           PhysAddr
                 FileSiz            MemSiz              Flags  Align
  PHDR           0x0000000000000040 0x0000000000000040 0x0000000000000040
                 0x00000000000002d8 0x00000000000002d8  R      0x8
  INTERP         0x0000000000000318 0x0000000000000318 0x0000000000000318
                 0x000000000000001c 0x000000000000001c  R      0x1
      [Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]
  LOAD           0x0000000000000000 0x0000000000000000 0x0000000000000000
                 0x0000000000000698 0x0000000000000698  R      0x1000
  LOAD           0x0000000000001000 0x0000000000001000 0x0000000000001000
                 0x0000000000000325 0x0000000000000325  R E    0x1000
  LOAD           0x0000000000002000 0x0000000000002000 0x0000000000002000
                 0x00000000000000fc 0x00000000000000fc  R      0x1000
  LOAD           0x0000000000002da8 0x0000000000003da8 0x0000000000003da8
                 0x0000000000000268 0x0000000000000270  RW     0x1000
  DYNAMIC        0x0000000000002db8 0x0000000000003db8 0x0000000000003db8
                 0x00000000000001f0 0x00000000000001f0  RW     0x8
  NOTE           0x0000000000000338 0x0000000000000338 0x0000000000000338
                 0x0000000000000030 0x0000000000000030  R      0x8
  NOTE           0x0000000000000368 0x0000000000000368 0x0000000000000368
                 0x0000000000000044 0x0000000000000044  R      0x4
  GNU_PROPERTY   0x0000000000000338 0x0000000000000338 0x0000000000000338
                 0x0000000000000030 0x0000000000000030  R      0x8
  GNU_EH_FRAME   0x0000000000002018 0x0000000000002018 0x0000000000002018
                 0x0000000000000034 0x0000000000000034  R      0x4
  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000
                 0x0000000000000000 0x0000000000000000  RW     0x10
  GNU_RELRO      0x0000000000002da8 0x0000000000003da8 0x0000000000003da8
                 0x0000000000000258 0x0000000000000258  R      0x1

 Section to Segment mapping:
  Segment Sections...
   00     
   01     .interp 
   02     .interp .note.gnu.property .note.gnu.build-id .note.ABI-tag .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt 
   03     .init .plt .plt.got .plt.sec .text .fini 
   04     .rodata .eh_frame_hdr .eh_frame 
   05     .init_array .fini_array .dynamic .got .data .bss 
   06     .dynamic 
   07     .note.gnu.property 
   08     .note.gnu.build-id .note.ABI-tag 
   09     .note.gnu.property 
   10     .eh_frame_hdr 
   11     
   12     .init_array .fini_array .dynamic .got 

Dynamic section at offset 0x2db8 contains 27 entries:
  Tag        Type                         Name/Value
 0x0000000000000001 (NEEDED)             Shared library: [libc.so.6]
 0x000000000000000c (INIT)               0x1000
 0x000000000000000d (FINI)               0x1318
 0x0000000000000019 (INIT_ARRAY)         0x3da8
 0x000000000000001b (INIT_ARRAYSZ)       8 (bytes)
 0x000000000000001a (FINI_ARRAY)         0x3db0
 0x000000000000001c (FINI_ARRAYSZ)       8 (bytes)
 0x000000006ffffef5 (GNU_HASH)           0x3b0
 0x0000000000000005 (STRTAB)             0x4b0
 0x0000000000000006 (SYMTAB)             0x3d8
 0x000000000000000a (STRSZ)              155 (bytes)
 0x000000000000000b (SYMENT)             24 (bytes)
 0x0000000000000015 (DEBUG)              0x0
 0x0000000000000003 (PLTGOT)             0x3fa8
 0x0000000000000002 (PLTRELSZ)           72 (bytes)
 0x0000000000000014 (PLTREL)             RELA
 0x0000000000000017 (JMPREL)             0x650
 0x0000000000000007 (RELA)               0x590
 0x0000000000000008 (RELASZ)             192 (bytes)
 0x0000000000000009 (RELAENT)            24 (bytes)
 0x000000000000001e (FLAGS)              BIND_NOW
 0x000000006ffffffb (FLAGS_1)            Flags: NOW PIE
 0x000000006ffffffe (VERNEED)            0x560
 0x000000006fffffff (VERNEEDNUM)         1
 0x000000006ffffff0 (VERSYM)             0x54c
 0x000000006ffffff9 (RELACOUNT)          3
 0x0000000000000000 (NULL)               0x0

Relocation section '.rela.dyn' at offset 0x590 contains 8 entries:
  Offset          Info           Type           Sym. Value    Sym. Name + Addend
000000003da8  000000000008 R_X86_64_RELATIVE                    1180
000000003db0  000000000008 R_X86_64_RELATIVE                    1140
000000004008  000000000008 R_X86_64_RELATIVE                    4008
000000003fd8  000100000006 R_X86_64_GLOB_DAT 0000000000000000 __libc_start_main@GLIBC_2.34 + 0
000000003fe0  000200000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_deregisterTM[...] + 0
000000003fe8  000500000006 R_X86_64_GLOB_DAT 0000000000000000 __gmon_start__ + 0
000000003ff0  000700000006 R_X86_64_GLOB_DAT 0000000000000000 _ITM_registerTMCl[...] + 0
000000003ff8  000800000006 R_X86_64_GLOB_DAT 0000000000000000 __cxa_finalize@GLIBC_2.2.5 + 0

Relocation section '.rela.plt' at offset 0x650 contains 3 entries:
  Offset          Info           Type           Sym. Value    Sym. Name + Addend
000000003fc0  000300000007 R_X86_64_JUMP_SLO 0000000000000000 puts@GLIBC_2.2.5 + 0
000000003fc8  000400000007 R_X86_64_JUMP_SLO 0000000000000000 strcmp@GLIBC_2.2.5 + 0
000000003fd0  000600000007 R_X86_64_JUMP_SLO 0000000000000000 malloc@GLIBC_2.2.5 + 0
No processor specific unwind information to decode

Symbol table '.dynsym' contains 9 entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND _[...]@GLIBC_2.34 (2)
     2: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterT[...]
     3: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@GLIBC_2.2.5 (3)
     4: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND [...]@GLIBC_2.2.5 (3)
     5: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
     6: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND [...]@GLIBC_2.2.5 (3)
     7: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMC[...]
     8: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND [...]@GLIBC_2.2.5 (3)

Symbol table '.symtab' contains 38 entries:
   Num:    Value          Size Type    Bind   Vis      Ndx Name
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS Scrt1.o
     2: 000000000000038c    32 OBJECT  LOCAL  DEFAULT    4 __abi_tag
     3: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c
     4: 00000000000010d0     0 FUNC    LOCAL  DEFAULT   16 deregister_tm_clones
     5: 0000000000001100     0 FUNC    LOCAL  DEFAULT   16 register_tm_clones
     6: 0000000000001140     0 FUNC    LOCAL  DEFAULT   16 __do_global_dtors_aux
     7: 0000000000004010     1 OBJECT  LOCAL  DEFAULT   26 completed.0
     8: 0000000000003db0     0 OBJECT  LOCAL  DEFAULT   22 __do_global_dtor[...]
     9: 0000000000001180     0 FUNC    LOCAL  DEFAULT   16 frame_dummy
    10: 0000000000003da8     0 OBJECT  LOCAL  DEFAULT   21 __frame_dummy_in[...]
    11: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS getting_started.c
    12: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c
    13: 00000000000020f8     0 OBJECT  LOCAL  DEFAULT   20 __FRAME_END__
    14: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS 
    15: 0000000000003db8     0 OBJECT  LOCAL  DEFAULT   23 _DYNAMIC
    16: 0000000000002018     0 NOTYPE  LOCAL  DEFAULT   19 __GNU_EH_FRAME_HDR
    17: 0000000000003fa8     0 OBJECT  LOCAL  DEFAULT   24 _GLOBAL_OFFSET_TABLE_
    18: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_mai[...]
    19: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterT[...]
    20: 0000000000004000     0 NOTYPE  WEAK   DEFAULT   25 data_start
    21: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@GLIBC_2.2.5
    22: 0000000000004010     0 NOTYPE  GLOBAL DEFAULT   25 _edata
    23: 0000000000001318     0 FUNC    GLOBAL HIDDEN    17 _fini
    24: 0000000000004000     0 NOTYPE  GLOBAL DEFAULT   25 __data_start
    25: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND strcmp@GLIBC_2.2.5
    26: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
    27: 0000000000004008     0 OBJECT  GLOBAL HIDDEN    25 __dso_handle
    28: 0000000000002000     4 OBJECT  GLOBAL DEFAULT   18 _IO_stdin_used
    29: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND malloc@GLIBC_2.2.5
    30: 0000000000004018     0 NOTYPE  GLOBAL DEFAULT   26 _end
    31: 00000000000010a0    38 FUNC    GLOBAL DEFAULT   16 _start
    32: 0000000000004010     0 NOTYPE  GLOBAL DEFAULT   26 __bss_start
    33: 0000000000001189   399 FUNC    GLOBAL DEFAULT   16 main
    34: 0000000000004010     0 OBJECT  GLOBAL HIDDEN    25 __TMC_END__
    35: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMC[...]
    36: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@G[...]
    37: 0000000000001000     0 FUNC    GLOBAL HIDDEN    12 _init

Histogram for `.gnu.hash' bucket list length (total of 2 buckets):
 Length  Number     % of total  Coverage
      0  1          ( 50.0%)
      1  1          ( 50.0%)    100.0%

Version symbols section '.gnu.version' contains 9 entries:
 Addr: 0x000000000000054c  Offset: 0x0000054c  Link: 6 (.dynsym)
  000:   0 (*local*)       2 (GLIBC_2.34)    1 (*global*)      3 (GLIBC_2.2.5)
  004:   3 (GLIBC_2.2.5)   1 (*global*)      3 (GLIBC_2.2.5)   1 (*global*)   
  008:   3 (GLIBC_2.2.5)

Version needs section '.gnu.version_r' contains 1 entry:
 Addr: 0x0000000000000560  Offset: 0x00000560  Link: 7 (.dynstr)
  000000: Version: 1  File: libc.so.6  Cnt: 2
  0x0010:   Name: GLIBC_2.2.5  Flags: none  Version: 3
  0x0020:   Name: GLIBC_2.34  Flags: none  Version: 2

Displaying notes found in: .note.gnu.property
  Owner                Data size 	Description
  GNU                  0x00000020	NT_GNU_PROPERTY_TYPE_0
      Properties: x86 feature: IBT, SHSTK
	x86 ISA needed: x86-64-baseline

Displaying notes found in: .note.gnu.build-id
  Owner                Data size 	Description
  GNU                  0x00000014	NT_GNU_BUILD_ID (unique build ID bitstring)
    Build ID: 078335bdc1f366e8302da84c95ff7a6299bedf0d

Displaying notes found in: .note.ABI-tag
  Owner                Data size 	Description
  GNU                  0x00000010	NT_GNU_ABI_TAG (ABI version tag)
    OS: Linux, ABI: 3.2.0
=========================================================================
 
 
+===========+
|  .RODATA  |
+===========+============================================================

Hex dump of section '.rodata':
  0x00002000 01000200 57656c63 6f6d652e 0044656e ....Welcome..Den
  0x00002010 6965642e 00                         ied..

=========================================================================
 
 
+=========+
|  .DATA  |
+=========+==============================================================

Hex dump of section '.data':
  0x00004000 00000000 00000000 08400000 00000000 .........@......

=========================================================================
 
 
+========+
|  .BSS  |
+========+===============================================================
 
0x8 Amount of bytes allocated
 
=========================================================================
 
 
+=================================+
|  BINARY EXECUTABLE DISASSEMBLY  |
+=================================+======================================

./getting_started.out:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 d9 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fd9]        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 8a 2f 00 00    	push   QWORD PTR [rip+0x2f8a]        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 8b 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f8b]        # 3fb8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nop    DWORD PTR [rax]
    1030:	f3 0f 1e fa          	endbr64
    1034:	68 00 00 00 00       	push   0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64
    1044:	68 01 00 00 00       	push   0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64
    1054:	68 02 00 00 00       	push   0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop

Disassembly of section .plt.got:

0000000000001060 <__cxa_finalize@plt>:
    1060:	f3 0f 1e fa          	endbr64
    1064:	f2 ff 25 8d 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f8d]        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    106b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .plt.sec:

0000000000001070 <puts@plt>:
    1070:	f3 0f 1e fa          	endbr64
    1074:	f2 ff 25 45 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f45]        # 3fc0 <puts@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001080 <strcmp@plt>:
    1080:	f3 0f 1e fa          	endbr64
    1084:	f2 ff 25 3d 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f3d]        # 3fc8 <strcmp@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001090 <malloc@plt>:
    1090:	f3 0f 1e fa          	endbr64
    1094:	f2 ff 25 35 2f 00 00 	bnd jmp QWORD PTR [rip+0x2f35]        # 3fd0 <malloc@GLIBC_2.2.5>
    109b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000000010a0 <_start>:
    10a0:	f3 0f 1e fa          	endbr64
    10a4:	31 ed                	xor    ebp,ebp
    10a6:	49 89 d1             	mov    r9,rdx
    10a9:	5e                   	pop    rsi
    10aa:	48 89 e2             	mov    rdx,rsp
    10ad:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    10b1:	50                   	push   rax
    10b2:	54                   	push   rsp
    10b3:	45 31 c0             	xor    r8d,r8d
    10b6:	31 c9                	xor    ecx,ecx
    10b8:	48 8d 3d ca 00 00 00 	lea    rdi,[rip+0xca]        # 1189 <main>
    10bf:	ff 15 13 2f 00 00    	call   QWORD PTR [rip+0x2f13]        # 3fd8 <__libc_start_main@GLIBC_2.34>
    10c5:	f4                   	hlt
    10c6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    10cd:	00 00 00 

00000000000010d0 <deregister_tm_clones>:
    10d0:	48 8d 3d 39 2f 00 00 	lea    rdi,[rip+0x2f39]        # 4010 <__TMC_END__>
    10d7:	48 8d 05 32 2f 00 00 	lea    rax,[rip+0x2f32]        # 4010 <__TMC_END__>
    10de:	48 39 f8             	cmp    rax,rdi
    10e1:	74 15                	je     10f8 <deregister_tm_clones+0x28>
    10e3:	48 8b 05 f6 2e 00 00 	mov    rax,QWORD PTR [rip+0x2ef6]        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    10ea:	48 85 c0             	test   rax,rax
    10ed:	74 09                	je     10f8 <deregister_tm_clones+0x28>
    10ef:	ff e0                	jmp    rax
    10f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    10f8:	c3                   	ret
    10f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001100 <register_tm_clones>:
    1100:	48 8d 3d 09 2f 00 00 	lea    rdi,[rip+0x2f09]        # 4010 <__TMC_END__>
    1107:	48 8d 35 02 2f 00 00 	lea    rsi,[rip+0x2f02]        # 4010 <__TMC_END__>
    110e:	48 29 fe             	sub    rsi,rdi
    1111:	48 89 f0             	mov    rax,rsi
    1114:	48 c1 ee 3f          	shr    rsi,0x3f
    1118:	48 c1 f8 03          	sar    rax,0x3
    111c:	48 01 c6             	add    rsi,rax
    111f:	48 d1 fe             	sar    rsi,1
    1122:	74 14                	je     1138 <register_tm_clones+0x38>
    1124:	48 8b 05 c5 2e 00 00 	mov    rax,QWORD PTR [rip+0x2ec5]        # 3ff0 <_ITM_registerTMCloneTable@Base>
    112b:	48 85 c0             	test   rax,rax
    112e:	74 08                	je     1138 <register_tm_clones+0x38>
    1130:	ff e0                	jmp    rax
    1132:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1138:	c3                   	ret
    1139:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001140 <__do_global_dtors_aux>:
    1140:	f3 0f 1e fa          	endbr64
    1144:	80 3d c5 2e 00 00 00 	cmp    BYTE PTR [rip+0x2ec5],0x0        # 4010 <__TMC_END__>
    114b:	75 2b                	jne    1178 <__do_global_dtors_aux+0x38>
    114d:	55                   	push   rbp
    114e:	48 83 3d a2 2e 00 00 	cmp    QWORD PTR [rip+0x2ea2],0x0        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1155:	00 
    1156:	48 89 e5             	mov    rbp,rsp
    1159:	74 0c                	je     1167 <__do_global_dtors_aux+0x27>
    115b:	48 8b 3d a6 2e 00 00 	mov    rdi,QWORD PTR [rip+0x2ea6]        # 4008 <__dso_handle>
    1162:	e8 f9 fe ff ff       	call   1060 <__cxa_finalize@plt>
    1167:	e8 64 ff ff ff       	call   10d0 <deregister_tm_clones>
    116c:	c6 05 9d 2e 00 00 01 	mov    BYTE PTR [rip+0x2e9d],0x1        # 4010 <__TMC_END__>
    1173:	5d                   	pop    rbp
    1174:	c3                   	ret
    1175:	0f 1f 00             	nop    DWORD PTR [rax]
    1178:	c3                   	ret
    1179:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001180 <frame_dummy>:
    1180:	f3 0f 1e fa          	endbr64
    1184:	e9 77 ff ff ff       	jmp    1100 <register_tm_clones>

0000000000001189 <main>:
    1189:	f3 0f 1e fa          	endbr64
    118d:	55                   	push   rbp
    118e:	48 89 e5             	mov    rbp,rsp
    1191:	48 83 ec 30          	sub    rsp,0x30
    1195:	89 7d dc             	mov    DWORD PTR [rbp-0x24],edi
    1198:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
    119c:	bf 18 00 00 00       	mov    edi,0x18
    11a1:	e8 ea fe ff ff       	call   1090 <malloc@plt>
    11a6:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
    11aa:	83 7d dc 01          	cmp    DWORD PTR [rbp-0x24],0x1
    11ae:	0f 8e 4e 01 00 00    	jle    1302 <main+0x179>
    11b4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    11b8:	c7 00 6e 00 00 00    	mov    DWORD PTR [rax],0x6e
    11be:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    11c2:	48 83 c0 04          	add    rax,0x4
    11c6:	c7 00 60 00 00 00    	mov    DWORD PTR [rax],0x60
    11cc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    11d0:	48 83 c0 08          	add    rax,0x8
    11d4:	c7 00 5e 00 00 00    	mov    DWORD PTR [rax],0x5e
    11da:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    11de:	48 83 c0 0c          	add    rax,0xc
    11e2:	c7 00 6d 00 00 00    	mov    DWORD PTR [rax],0x6d
    11e8:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    11ec:	48 83 c0 10          	add    rax,0x10
    11f0:	c7 00 60 00 00 00    	mov    DWORD PTR [rax],0x60
    11f6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    11fa:	48 83 c0 14          	add    rax,0x14
    11fe:	c7 00 6f 00 00 00    	mov    DWORD PTR [rax],0x6f
    1204:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [rbp-0x18],0x0
    120b:	eb 5e                	jmp    126b <main+0xe2>
    120d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    1211:	8b 00                	mov    eax,DWORD PTR [rax]
    1213:	8d 50 01             	lea    edx,[rax+0x1]
    1216:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    121a:	89 10                	mov    DWORD PTR [rax],edx
    121c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    1220:	48 83 c0 04          	add    rax,0x4
    1224:	8b 10                	mov    edx,DWORD PTR [rax]
    1226:	83 c2 01             	add    edx,0x1
    1229:	89 10                	mov    DWORD PTR [rax],edx
    122b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    122f:	48 83 c0 08          	add    rax,0x8
    1233:	8b 10                	mov    edx,DWORD PTR [rax]
    1235:	83 c2 01             	add    edx,0x1
    1238:	89 10                	mov    DWORD PTR [rax],edx
    123a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    123e:	48 83 c0 0c          	add    rax,0xc
    1242:	8b 10                	mov    edx,DWORD PTR [rax]
    1244:	83 c2 01             	add    edx,0x1
    1247:	89 10                	mov    DWORD PTR [rax],edx
    1249:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    124d:	48 83 c0 10          	add    rax,0x10
    1251:	8b 10                	mov    edx,DWORD PTR [rax]
    1253:	83 c2 01             	add    edx,0x1
    1256:	89 10                	mov    DWORD PTR [rax],edx
    1258:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    125c:	48 83 c0 14          	add    rax,0x14
    1260:	8b 10                	mov    edx,DWORD PTR [rax]
    1262:	83 c2 01             	add    edx,0x1
    1265:	89 10                	mov    DWORD PTR [rax],edx
    1267:	83 45 e8 01          	add    DWORD PTR [rbp-0x18],0x1
    126b:	83 7d e8 04          	cmp    DWORD PTR [rbp-0x18],0x4
    126f:	7e 9c                	jle    120d <main+0x84>
    1271:	bf 07 00 00 00       	mov    edi,0x7
    1276:	e8 15 fe ff ff       	call   1090 <malloc@plt>
    127b:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    127f:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
    1286:	eb 29                	jmp    12b1 <main+0x128>
    1288:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    128b:	48 98                	cdqe
    128d:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
    1294:	00 
    1295:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
    1299:	48 01 d0             	add    rax,rdx
    129c:	8b 10                	mov    edx,DWORD PTR [rax]
    129e:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
    12a1:	48 63 c8             	movsxd rcx,eax
    12a4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    12a8:	48 01 c8             	add    rax,rcx
    12ab:	88 10                	mov    BYTE PTR [rax],dl
    12ad:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
    12b1:	83 7d ec 06          	cmp    DWORD PTR [rbp-0x14],0x6
    12b5:	7e d1                	jle    1288 <main+0xff>
    12b7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    12bb:	48 83 c0 06          	add    rax,0x6
    12bf:	c6 00 00             	mov    BYTE PTR [rax],0x0
    12c2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
    12c6:	48 83 c0 08          	add    rax,0x8
    12ca:	48 8b 00             	mov    rax,QWORD PTR [rax]
    12cd:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
    12d1:	48 89 d6             	mov    rsi,rdx
    12d4:	48 89 c7             	mov    rdi,rax
    12d7:	e8 a4 fd ff ff       	call   1080 <strcmp@plt>
    12dc:	85 c0                	test   eax,eax
    12de:	75 11                	jne    12f1 <main+0x168>
    12e0:	48 8d 05 1d 0d 00 00 	lea    rax,[rip+0xd1d]        # 2004 <_IO_stdin_used+0x4>
    12e7:	48 89 c7             	mov    rdi,rax
    12ea:	e8 81 fd ff ff       	call   1070 <puts@plt>
    12ef:	eb 20                	jmp    1311 <main+0x188>
    12f1:	48 8d 05 15 0d 00 00 	lea    rax,[rip+0xd15]        # 200d <_IO_stdin_used+0xd>
    12f8:	48 89 c7             	mov    rdi,rax
    12fb:	e8 70 fd ff ff       	call   1070 <puts@plt>
    1300:	eb 0f                	jmp    1311 <main+0x188>
    1302:	48 8d 05 04 0d 00 00 	lea    rax,[rip+0xd04]        # 200d <_IO_stdin_used+0xd>
    1309:	48 89 c7             	mov    rdi,rax
    130c:	e8 5f fd ff ff       	call   1070 <puts@plt>
    1311:	b8 00 00 00 00       	mov    eax,0x0
    1316:	c9                   	leave
    1317:	c3                   	ret

Disassembly of section .fini:

0000000000001318 <_fini>:
    1318:	f3 0f 1e fa          	endbr64
    131c:	48 83 ec 08          	sub    rsp,0x8
    1320:	48 83 c4 08          	add    rsp,0x8
    1324:	c3                   	ret
=========================================================================
 
 
